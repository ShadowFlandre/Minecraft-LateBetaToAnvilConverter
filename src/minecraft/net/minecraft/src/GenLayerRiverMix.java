package net.minecraft.src;

public class GenLayerRiverMix extends GenLayer
{
    public GenLayerRiverMix(long l, GenLayer genlayer, GenLayer genlayer1)
    {
        super(l);
        field_35512_b = genlayer;
        field_35513_c = genlayer1;
    }

    public void initWorldGenSeed(long l)
    {
        field_35512_b.initWorldGenSeed(l);
        field_35513_c.initWorldGenSeed(l);
        super.initWorldGenSeed(l);
    }

    public int[] getInts(int i, int j, int k, int l)
    {
        int ai[] = field_35512_b.getInts(i, j, k, l);
        int ai1[] = field_35513_c.getInts(i, j, k, l);
        int ai2[] = IntCache.getIntCache(k * l);
        for(int i1 = 0; i1 < k * l; i1++)
        {
            if(ai[i1] == BiomeGenBase.ocean.biomeID)
            {
                ai2[i1] = ai[i1];
            } else
            {
                ai2[i1] = ai1[i1] < 0 ? ai[i1] : ai1[i1];
            }
        }

        return ai2;
    }

    private GenLayer field_35512_b;
    private GenLayer field_35513_c;

    /**
    private GenLayer biomePatternGeneratorChain;
    private GenLayer riverPatternGeneratorChain;

    public GenLayerRiverMix(long par1, GenLayer par3GenLayer, GenLayer par4GenLayer)
    {
        super(par1);
        this.biomePatternGeneratorChain = par3GenLayer;
        this.riverPatternGeneratorChain = par4GenLayer;
    }
     */

    /**
     * Initialize layer's local worldGenSeed based on its own baseSeed and the world's global seed (passed in as an
     * argument).
     */

    /**
    public void initWorldGenSeed(long par1)
    {
        this.biomePatternGeneratorChain.initWorldGenSeed(par1);
        this.riverPatternGeneratorChain.initWorldGenSeed(par1);
        super.initWorldGenSeed(par1);
    }
     */

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */

    /**
    public int[] getInts(int par1, int par2, int par3, int par4)
    {
        int[] var5 = this.biomePatternGeneratorChain.getInts(par1, par2, par3, par4);
        int[] var6 = this.riverPatternGeneratorChain.getInts(par1, par2, par3, par4);
        int[] var7 = IntCache.getIntCache(par3 * par4);

        for (int var8 = 0; var8 < par3 * par4; ++var8)
        {
            if (var5[var8] == BiomeGenBase.ocean.biomeID)
            {
                var7[var8] = var5[var8];
            }
            else
            {
                var7[var8] = var5[var8];
            }
        }

        return var7;
    }
     */
}
